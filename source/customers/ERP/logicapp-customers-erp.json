{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "infra": {
      "type": "object",
      "metadata": {
        "description": "Provide the object that contain all information about common infrastructure"
      }
    },
    "releaseInfo": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Provide info about the release that deployed this resource."
      }
    },
    "deploymentDateTime": {
      "defaultValue": "[utcNow('yyyy-MMM-dd HH:mm:ss')]",
      "metadata": {
        "description": "Date and time of deployment to be inserted into tags for the Logic App resource."
      },
      "type": "string"
    },
    "erp": {
      "type": "object",
      "metadata": {
        "description": "Details about the ERP system such as Url, api key header name, etc."
      }
    },
    "apiKeyValue": {
      "type": "securestring"
    }
  },
  "variables": {
    "logicAppName": "[concat(parameters('infra').environment, '-', parameters('infra').project, '-customers-erp-', parameters('infra').region)]",
    "logicAppResourceId": "[resourceId('Microsoft.Logic/workflows', variables('logicAppName'))]",
    "infraResourceGroup": "[concat(parameters('infra').environment,'-', parameters('infra').project, '-infra-', parameters('infra').region)]",
    "logAnalyticsName": "[concat(parameters('infra').environment,'-', parameters('infra').project, '-logs-', parameters('infra').region)]",
    "logAnalyticsWorkspaceResourceId": "[resourceId(variables('infraResourceGroup'), 'microsoft.operationalinsights/workspaces', variables('logAnalyticsName'))]",
    "keyVaultName": "[concat(parameters('infra').environment, '-', parameters('infra').project, '-kv-', parameters('infra').region)]"
  },
  "resources": [
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2017-07-01",
      "name": "[variables('logicAppName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "Logic App for Customers to ERP",
        "application": "[parameters('infra').project]",
        "business": "ACME",
        "component": "LogicApp",
        "environment": "[parameters('infra').environment]",
        "location": "[resourceGroup().location]",
        "role": "workflow",
        "schedule": "none",
        "system": "[parameters('infra').project]",
        "Release": "[parameters('releaseInfo')]",
        "Release date": "[parameters('deploymentDateTime')]"
      },
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "Complete_the_message_in_a_topic_subscription": {
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['servicebus']['connectionId']"
                  }
                },
                "method": "delete",
                "path": "/@{encodeURIComponent(encodeURIComponent('customers'))}/subscriptions/@{encodeURIComponent('erp')}/messages/complete",
                "queries": {
                  "lockToken": "@triggerBody()?['LockToken']",
                  "sessionId": "",
                  "subscriptionType": "Main"
                }
              },
              "runAfter": {
              },
              "type": "ApiConnection"
            },
            "HTTP": {
              "inputs": {
                "body": "@base64ToString(triggerBody()?['ContentData'])",
                "headers": {
                  "[parameters('erp').apiKeyName]": "@parameters('erp_api_key')"
                },
                "method": "POST",
                "uri": "[parameters('erp').url]"
              },
              "runtimeConfiguration": {
                "secureData": {
                  "properties": [
                    "inputs"
                  ]
                }
              },
              "runAfter": {
                "Complete_the_message_in_a_topic_subscription": [
                  "Succeeded",
                  "Failed",
                  "Skipped",
                  "TimedOut"
                ]
              },
              "type": "Http"
            }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {
          },
          "parameters": {
            "$connections": {
              "defaultValue": {
              },
              "type": "Object"
            },
            "erp_api_key": {
              "type": "securestring"
            }
          },
          "triggers": {
            "When_a_message_is_received_in_a_topic_subscription_(peek-lock)": {
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['servicebus']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/@{encodeURIComponent(encodeURIComponent('customers'))}/subscriptions/@{encodeURIComponent('erp')}/messages/head/peek",
                "queries": {
                  "sessionId": "None",
                  "subscriptionType": "Main"
                }
              },
              "recurrence": {
                "frequency": "Minute",
                "interval": 1
              },
              "type": "ApiConnection"
            }
          }
        },
        "parameters": {
          "$connections": {
            "value": {
              "servicebus": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/', 'servicebus')]",
                "connectionId": "[resourceId('Microsoft.Web/connections/', 'servicebus')]",
                "connectionName": "servicebus"
              }
            }
          },
          "erp_api_key": {
            "value": "[parameters('apiKeyValue')]"
          }
        }
      },
      "resources": [
        {
          "type": "providers/diagnosticSettings",
          "name": "[concat('/Microsoft.Insights/', variables('logicAppName'), '-logs')]",
          "apiVersion": "2017-05-01-preview",
          "tags": {
            "displayName": "Logs to OMS",
            "createdBy": "[parameters('releaseInfo')]"
          },
          "properties": {
            "workspaceId": "[variables('logAnalyticsWorkspaceResourceId')]",
            "logs": [
              {
                "category": "WorkflowRuntime",
                "enabled": true
              }
            ],
            "metrics": [
              {
                "category": "AllMetrics",
                "enabled": true
              }
            ]
          },
          "dependsOn": [
            "[variables('logicAppResourceId')]"
          ]
        }
      ],
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'dynamicSecret')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-05-01",
      "name": "dynamicSecret",
      "properties": {
        "mode": "Incremental",
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "serviceBusConnectionString": {
              "type": "securestring"
            }
          },
          "variables": {
          },
          "resources": [
            {
              "type": "MICROSOFT.WEB/CONNECTIONS",
              "apiVersion": "2018-07-01-preview",
              "name": "servicebus",
              "location": "[resourceGroup().location]",
              "properties": {
                "api": {
                  "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/', 'servicebus')]"
                },
                "displayName": "servicebus",
                "parameterValues": {
                  "connectionString": "[parameters('serviceBusConnectionString')]"
                }
              }
            }
          ],
          "outputs": {
          }
        },
        "parameters": {
          "serviceBusConnectionString": {
            "reference": {
              "keyVault": {
                "id": "[resourceId(variables('infraResourceGroup'), 'Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
              },
              "secretName": "Service-Bus-Connection-String"
            }
          }
        }
      }
    }
  ]
}